import org.eclipse.leshan.client.resource.BaseInstanceEnabler;
import org.eclipse.leshan.core.node.LwM2mResource;
import org.eclipse.leshan.core.response.ExecuteResponse;
import org.eclipse.leshan.core.response.ReadResponse;
import org.eclipse.leshan.core.response.WriteResponse;

public class ParkingSpot extends BaseInstanceEnabler {
	private static final int PARKING_SPOT_ID = 32800;
	private static final int PARKING_SPOT_STATE = 32801;
	private static final int VEHICLE_ID = 32802;
	private static final int BILING_RATE = 32803;
	private static final int VEIHICLE_PLATE_IMAGE = 32804;
	
	private final String ParkingSpotID;
	private String ParkingSpotState;
	private String VehicleID;
	private float BillingRate;
	//private FILE image;
	
	public ParkingSpot() {
		ParkingSpotID = "Parking-Spot-Group129" ;
		ParkingSpotState = "free";
		VehicleID = "__-___-_";
		BillingRate = 0;
	}
	
	@Override
	public ReadResponse read(int resourceId) {
		System.out.println("Device : read on resource " + resourceId);
		
		switch (resourceId) {
		case PARKING_SPOT_ID:
			return ReadResponse.success(resourceId, ParkingSpotID);
		
		case PARKING_SPOT_STATE:
			return ReadResponse.success(resourceId, ParkingSpotState);
		
		case VEHICLE_ID:
			return ReadResponse.success(resourceId, VehicleID);
		
		case BILING_RATE:
			return ReadResponse.success(resourceId, BillingRate);
			
//		case VEIHICLE_PLATE_IMAGE:
//			return ReadResonse.success(resourceId, image);
		default:
			return super.read(resourceId);
		}
	}
	
	@Override
	public WriteResponse write(int resourceId, LwM2mResource value) {
		System.out.println("Device : write on resource " + resourceId);
		
		switch (resourceId) {
		case PARKING_SPOT_STATE:
			ParkingSpotState = (String) value.getValue();
			fireResourcesChange(resourceId);
			return WriteResponse.success();
		
		case VEHICLE_ID:
			VehicleID = (String) value.getValue();
			fireResourcesChange(resourceId);
			return WriteResponse.success();
		
		case BILING_RATE:
			BillingRate = (float) value.getValue();
			fireResourcesChange(resourceId);
			return WriteResponse.success();
			
//		case VEIHICLE_PLATE_IMAGE:
//			ParkingSpotState = (String) value.getValue();
//			
		//	return WriteResponse.success();
		default:
			return super.write(resourceId, value);
		}
	}
	
	@Override
	public ExecuteResponse execute(int resourceId, String params) {
		System.out.println("Device : exec on resource " + resourceId);
		
		switch (resourceId) {
		
		default:
			return super.execute(resourceId, params);
		}
	}
	
}
